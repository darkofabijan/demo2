version: "v1.0"
name: Example ppls
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
    containers:
      - name: ruby
        image: grc.io/rt/ruby:2.5.1

blocks:
  - name: Fetch deps
    task:
      jobs:
      - name: Download and cache
        commands:
          - curl https://installtoolbox.sh | bash
          - cache list          
          - cache has_key elasticsearch-6.2.1 || wget -nc https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.2.1.deb
          - cache has_key elasticsearch-6.2.1 || cache store elasticsearch-6.2.1 elasticsearch-6.2.1.deb


  - name: Tests
    task:
      agent:
        machine:
          type: e1-standard-2
          os_image: redhat
          containers:
            - name: main
              image: grc.io/rt/web:123-123-124
            - name: postgres
              image: grc.io/rt/pg:123-123-1sdf              
              # optional
              env_vars:
                - name: PG_PASSWORD
                  value: shifra
                - name: PG_PASSWORD1
                  value: shifra1
              secrets:
                - name: gcp-keys
              # optional
              command: "/bin/bash"
                                
      jobs:
      - name: RSpec 1/3
        commands:
          - checkout
          - bundle exec rspec 1/3
      - name: RSpec 2/3
        commands:
          - checkout
          - bundle exec rspec 2/3
      - name: RSpec 3/3
        commands:
          - checkout
          - bundle exec rspec 3/3
          

promotions:
  - name: Deploy to Production
    pipeline_file: deploy.yml
    parameters: 
      env_vars:
        - name: SERVER_IP
          required: false
          description: Lorem impsum      
          options: 
            - "192.158.23.23"
            - "192.158.23.23"
        - name: SERVER_COLOR
          description: Select your targer server
          dafault_value: "Red"
          options: 
            - "Yellow"
            - "Green"
            - "Red"
            - "Blue"




        # Simplest example
        - name: SERVER_IP
          description: Bla bla
        - name: SERVER_HOSTNAME
          description: Bla bla
        - name: SERVER_COLOR
          description: Bla bla
          required: false

        # The value passed must be one from the list. In UI we merge default with values and select defaut. 
        # In API if some value which is different from default + values is sent we reject
        # In API if nothing is sent we set default value
        # In API if valid value is sent it will be that value :)      
        - name: SERVER_IP
          description: Lorem impsum
          dafault_value: "Bnbnbn"
          options: 
            - "A"
            - "B"
            - "C"          

        # The value passed must be one from the list. First is default in UI is black option in select box.
        # We are not sending anything to API if user selected blank value from the UI.
        - name: SERVER_IP
          required: false
          description: Lorem impsum      
          options: 
            - "192.158.23.23"
            - "192.158.23.23"

        # Just example of simplest form
        - name: SERVER_IP
          options: 
            - "192.158.23.23"
            - "192.158.23.23"      
